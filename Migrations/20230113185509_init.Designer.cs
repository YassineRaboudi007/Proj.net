// <auto-generated />
using System;
using Gestion_note.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestionnote.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230113185509_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FilierMatiere", b =>
                {
                    b.Property<Guid>("FilierMatierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatieresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilierMatierId", "MatieresId");

                    b.HasIndex("MatieresId");

                    b.ToTable("FilierMatiere");
                });

            modelBuilder.Entity("Gestion_note.Models.Filier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Filiers");
                });

            modelBuilder.Entity("Gestion_note.Models.Matiere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Coefficent")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Matieres");
                });

            modelBuilder.Entity("Gestion_note.Models.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatiereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("NoteDevoir")
                        .HasColumnType("float");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeExam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MatiereId");

                    b.HasIndex("StudentId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Gestion_note.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentFilierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentFilierId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Gestion_note.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("MatiereTeacher", b =>
                {
                    b.Property<Guid>("MatieresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherMatierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatieresId", "TeacherMatierId");

                    b.HasIndex("TeacherMatierId");

                    b.ToTable("MatiereTeacher");
                });

            modelBuilder.Entity("FilierMatiere", b =>
                {
                    b.HasOne("Gestion_note.Models.Filier", null)
                        .WithMany()
                        .HasForeignKey("FilierMatierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_note.Models.Matiere", null)
                        .WithMany()
                        .HasForeignKey("MatieresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion_note.Models.Filier", b =>
                {
                    b.HasOne("Gestion_note.Models.Teacher", null)
                        .WithMany("Filiers")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("Gestion_note.Models.Note", b =>
                {
                    b.HasOne("Gestion_note.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_note.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matiere");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Gestion_note.Models.Student", b =>
                {
                    b.HasOne("Gestion_note.Models.Filier", "StudentFilier")
                        .WithMany("Students")
                        .HasForeignKey("StudentFilierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentFilier");
                });

            modelBuilder.Entity("MatiereTeacher", b =>
                {
                    b.HasOne("Gestion_note.Models.Matiere", null)
                        .WithMany()
                        .HasForeignKey("MatieresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_note.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeacherMatierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion_note.Models.Filier", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Gestion_note.Models.Teacher", b =>
                {
                    b.Navigation("Filiers");
                });
#pragma warning restore 612, 618
        }
    }
}
